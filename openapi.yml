openapi: "3.0.3"
info:
  title: Server
  version: "1.0"
servers:
  - url: https://api.server.test/v1

components:
  schemas:
    ErrorItem:
      type: object
      properties:
        name:
          type: string
          description: Name of parameter or field.
          example: error message
        code:
          type: string
          description: Error code.
          example: "Empty"
        Description:
          type: string
          description: Description.
          example: The field is empty
      required:
        - "name"

    Error:
      type: object
      additionalProperties: false
      properties:
        code:
          type: integer
          description: HTTP status code.
          example: 400
        status:
          type: string
          description: Status.
          example: "Bad Request"
        reason:
          type: string
          description: Error reason.
          example: INVALID_PARAMETERS
        request_id:
          type: string
          description: Request ID.
          example: c4b9df35-1716-4099-b24f-f844b5491e22
        description:
          type: string
          description: Description.
          example: Something went wrong.
        debug:
          type: string
          description: Debug information.
          example: S0011.
        details:
          type: object
        items:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
      required:
        - "status"
        - "code"

  responses:
    400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    401Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    402PaymentRequired:
      description: Payment required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    404NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    409Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    500InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

paths:
  /healthcheck:
    get:
      tags:
        - system
      summary: Server is running.
      responses:
        "200":
          description: OK
